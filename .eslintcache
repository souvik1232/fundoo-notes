[{"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\index.js":"1","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\App.js":"2","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js":"3","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx":"4","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx":"5","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx":"6","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx":"7","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx":"8","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx":"9","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx":"10","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx":"11","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js":"12","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js":"13","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx":"14","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx":"15","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx":"16","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js":"17","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\history.js":"18","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\authroute\\authroute.js":"19","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\privateroute\\privateroute.js":"20","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\utility.jsx":"21"},{"size":501,"mtime":1612359658725,"results":"22","hashOfConfig":"23"},{"size":1414,"mtime":1618933048848,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":6937,"mtime":1619599360788,"results":"26","hashOfConfig":"23"},{"size":3247,"mtime":1612710950306,"results":"27","hashOfConfig":"23"},{"size":5009,"mtime":1618846296845,"results":"28","hashOfConfig":"23"},{"size":1039,"mtime":1614659443946,"results":"29","hashOfConfig":"23"},{"size":3313,"mtime":1612849278665,"results":"30","hashOfConfig":"23"},{"size":8689,"mtime":1618843958926,"results":"31","hashOfConfig":"23"},{"size":3242,"mtime":1618843794105,"results":"32","hashOfConfig":"23"},{"size":3038,"mtime":1614659691666,"results":"33","hashOfConfig":"23"},{"size":578,"mtime":1612792911784,"results":"34","hashOfConfig":"23"},{"size":1292,"mtime":1614657738489,"results":"35","hashOfConfig":"23"},{"size":3415,"mtime":1614059426223,"results":"36","hashOfConfig":"23"},{"size":5831,"mtime":1618845910353,"results":"37","hashOfConfig":"23"},{"size":6062,"mtime":1618844062541,"results":"38","hashOfConfig":"23"},{"size":568,"mtime":1613726435655,"results":"39","hashOfConfig":"23"},{"size":85,"mtime":1618028978015,"results":"40","hashOfConfig":"23"},{"size":430,"mtime":1618845164213,"results":"41","hashOfConfig":"23"},{"size":438,"mtime":1615449655310,"results":"42","hashOfConfig":"23"},{"size":482,"mtime":1619598508816,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10l3y9x",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\index.js",[],["95","96"],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\App.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx",["97","98","99","100","101","102","103","104"],"import React, { Component } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport history from '../../components/history'\r\nimport './dashboard.scss';\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport GetNote from '../getNote/getNote1'\r\nimport ViewAgendaOutlinedIcon from '@material-ui/icons/ViewAgendaOutlined';\r\n\r\nclass dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            sidebar: false,\r\n            sidebarOpen: true,\r\n            notes: false,\r\n            archive: false,\r\n            trash: false,\r\n            reminder: false,\r\n            edit: false,\r\n            Assignment: false,\r\n        }\r\n    }\r\n    showSidebar = () => {\r\n        this.setState({ sidebar: (!this.state.sidebar) })\r\n    }\r\n    onSetSidebarOpen = (open) => {\r\n        this.setState({ sidebarOpen: open });\r\n    }\r\n    trash = () => {\r\n        history.push('/dashboard/trash')\r\n        this.setState({\r\n            trash: true,\r\n            notes: false,\r\n            archive: false\r\n        })\r\n    }\r\n    notes = () => {\r\n        history.push('/dashboard/notes')\r\n        this.setState({\r\n            notes: true,\r\n            archive: false,\r\n            trash: false\r\n        })\r\n    }\r\n    archive = () => {\r\n        history.push('/dashboard/archive')\r\n        this.setState({\r\n            archive: true,\r\n            notes: false,\r\n            trash: false,\r\n        })\r\n    }\r\n    refresh = ()=>{\r\n        <GetNote/>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div >\r\n                <div><Navbar className='nav' bg=\"\" variant=\"light\" expand=\"xl\">\r\n                    <img className='menu-bars' onClick={this.showSidebar} />\r\n                    <div className='img'><img /></div>\r\n                    <div className=\"app_nam\"><Typography variant=\"h5\" color=\"textSecondary\">\r\n                        <span style={{ color: \"#0606f8\" }}>F</span>\r\n                        <span style={{ color: \"#d10303\" }}>u</span>\r\n                        <span style={{ color: \"#f0b000\" }}>n</span>\r\n                        <span style={{ color: \"#0606f8\" }}>d</span>\r\n                        <span style={{ color: \"green\" }}>o</span>\r\n                        <span style={{ color: \"#d10303\" }}>o</span>\r\n                    </Typography></div>\r\n\r\n\r\n                    <div className=\"search\">\r\n                        <div className=\"searchIcon\">\r\n                            <div className=\"searchIcon\">\r\n                                <SearchIcon />\r\n                            </div>\r\n                        </div>\r\n                        <InputBase\r\n                            className=\"searchInput\"\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: \"inputRoot\",\r\n                                input: \"inputInput\",\r\n                            }}\r\n                            inputProps={{ \"aria-label\": \"search\" }}\r\n                        />\r\n                    </div>\r\n                    <nav className={this.state.sidebar ? 'nav-menu active' : 'nav-menu'} >\r\n                        <div className={this.state.notes ? 'notes active' : 'notes'} onClick={this.notes}>\r\n                            <img className='ig' id='i1' /><span className='a'>Notes</span></div>\r\n                        <div className='reminder'><img className='ig' id='i2' /><span className='a'>Reminder</span></div>\r\n                        <div className='assinment'><img className='ig' id='i6' /><span className='a'>Assignment DSP</span></div>\r\n                        <div className='edit'><img className='ig' id='i3' /><span className='a'>Edit</span></div>\r\n                        <div className={this.state.archive ? 'archive active' : 'archive'} onClick={this.archive}> <img className='ig' id='i4' /><span className='a'>Archive</span></div>\r\n                        <div className={this.state.trash ? 'trash active' : 'trash'} onClick={this.trash}><img className='ig' id='i5' /><span className='a'>Trash</span></div>\r\n                    </nav>\r\n                    <div className='icon'><RefreshIcon style={{ cursor: 'pointer' }} onClick={this.refresh}/>\r\n                        <ViewAgendaOutlinedIcon style={{ cursor: 'pointer' }} />\r\n                        <SettingsIcon style={{ cursor: 'pointer' }} />\r\n                        <div className='ic'>\r\n                            <AppsIcon style={{ cursor: 'pointer' }} />\r\n                            <div className='profile' style={{ cursor: 'pointer' }}></div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Navbar></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default dashboard","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx",["105","106","107"],"import React, { Component } from 'react'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UnarchiveOutlinedIcon from '@material-ui/icons/UnarchiveOutlined';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport CreateNote from '../createNote/createNote'\r\nimport DisplayNote from '../displayNotes/displayNotes'\r\nimport './getarchive.scss'\r\nconst noteService = new NoteService()\r\n\r\nclass getNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            archive: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.note()\r\n    }\r\n\r\n    note = () => {\r\n        console.log('called');\r\n        noteService.getarchiveNote().then((res) => {\r\n            console.log(res.data.data.data);\r\n            this.setState({ archive: res.data.data.data })\r\n            this.setState({ archive: this.state.archive.reverse() })\r\n        })\r\n    }\r\n    unarchive=(e,id)=>{\r\n        let data = {\r\n            noteIdList: [id],\r\n            isArchived: false,\r\n          };\r\n          console.log(data)\r\n          noteService.archiveNote(data)\r\n            .then((data) => {\r\n              console.log(data);\r\n              // props.getupdate()\r\n              this.note()\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"error = \" + err);\r\n            });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mainContent\">\r\n                {\r\n                    this.state.archive.map((data) => (\r\n                        <Card key={data.id} className='card' variant='outlined' >\r\n                            <CardContent onClick={(e) => this.modalOpen(e, data)}>\r\n\r\n                                <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                    {data.description}\r\n                                </Typography>\r\n\r\n                                {/* <GetNote /> */}\r\n\r\n\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className='icons'>\r\n                                    <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n                                        <UnarchiveOutlinedIcon fontSize=\"small\" onClick={(e)=>{this.unarchive(e,data.id)}} />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default getNote","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js",["108"],"import axios from \"axios\";\r\nimport Axios from \"./axiosservice\";\r\n\r\nconst axiosService = new Axios()\r\n\r\nexport default class NoteService {\r\n    addNote = (data) => {\r\n        return axiosService.Post('notes/addNotes', data, localStorage.getItem('token'))\r\n\r\n    }\r\n    getNote = () => {\r\n        return axiosService.Get('notes/getNotesList', localStorage.getItem('token'))\r\n    }\r\n    updateNote = (data) => {\r\n        return axiosService.Post('notes/updateNotes', data, localStorage.getItem('token'))\r\n    }\r\n    deleteNote = (data) => {\r\n        return axiosService.Post('notes/trashNotes', data, localStorage.getItem('token'))\r\n    }\r\n    gettrashNote = () => {\r\n        return axiosService.Get('notes/getTrashNotesList', localStorage.getItem('token'))\r\n    }\r\n    archiveNote = (data) => {\r\n        return axiosService.Post('notes/archiveNotes', data, localStorage.getItem('token'))\r\n    }\r\n    getarchiveNote = () => {\r\n        return axiosService.Get('notes/getArchiveNotesList', localStorage.getItem('token'))\r\n    }\r\n    postColor = (data) => {\r\n        return axiosService.Post('notes/changesColorNotes',data,localStorage.getItem('token'))\r\n    }\r\n    foreverDelete = (data)=>{\r\n        return axiosService.Post('notes/deleteForeverNotes',data,localStorage.getItem('token'))\r\n    }\r\n}","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx",["109","110","111","112","113","114","115","116"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport logoicon from \"../icons/pin.jpeg\";\r\nimport '../createNote/createNote.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nvar checkOpen = \"open\";\r\n\r\nconst noteService = new NoteService()\r\n\r\nexport default function AddNote(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, settitle] = React.useState('');\r\n  const [description, setdescription] = React.useState('');\r\n  const handletitle = (Event) => {\r\n    settitle(Event.target.value)\r\n  }\r\n\r\n  const handledescription = (Event) => {\r\n    setdescription(Event.target.value)\r\n  }\r\n  const NotePadOpenClose = () => {\r\n    if (checkOpen == \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    } else if (checkOpen == \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    }\r\n    console.log(checkOpen);\r\n  }\r\n\r\n  const handleNote=()=>{\r\n    let data = {\r\n      title : title,\r\n      description : description,\r\n    }\r\n    console.log(data)\r\n    if (data[title]===null|| data[description]===null) {\r\n      alert(\"Fill the note\");\r\n    }else{\r\n    noteService.addNote(data).then((data)=>{\r\n      props.getnoteupdate()\r\n      console.log(data);\r\n    })\r\n    .catch ((error)=>{\r\n      console.log(error)\r\n    })\r\n  }\r\n    if (checkOpen == \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    } else if (checkOpen == \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    }\r\n    \r\n    // window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"notesone\">\r\n      {open ?\r\n        <div className=\"contain container1\">\r\n          <div className=\"note1\" >\r\n            <div className=\"title pd\">\r\n              <InputBase placeholder='Title...' fullWidth name='title' onChange={handletitle} />\r\n              <IconButton>\r\n                <img className=\"logoIcon\" src={logoicon} size=\"small\" />\r\n              </IconButton>\r\n            </div>\r\n            <div className='note pd'>\r\n              <InputBase placeholder='Take a note...' fullWidth name='description' onChange={handledescription} />\r\n            </div>\r\n          </div>\r\n          <br>\r\n          </br>\r\n\r\n          <div className=\"toolbar\">\r\n            <div className=\"toolbar1\">\r\n              <DisplayIcons />\r\n            </div>\r\n            <div className=\"close-button\">\r\n              <Button size=\"small\" onClick={handleNote}>Close</Button>\r\n            </div>\r\n          </div>\r\n        </div> :\r\n        <div className=\"contain container\" >\r\n          <div className=\"note\">\r\n            <InputBase placeholder='Take a note...' fullWidth onClick={NotePadOpenClose} />\r\n          </div>\r\n          <IconButton>\r\n            <CheckBoxOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <BrushIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ImageOutlinedIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n\r\n      }\r\n    </div>\r\n  )\r\n\r\n}","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx",["117"],"import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport logoicon from \"../icons/pin.jpeg\";\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\nimport './displayNotes.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Modal from 'react-modal'\r\n\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst noteService = new NoteService()\r\n\r\n\r\nclass DisplayNotes extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            noteId: '',\r\n            title: '',\r\n            description: '',\r\n            modalIsOpen: false,\r\n            open: '',\r\n            clr: '#fafafa'\r\n        }\r\n    }\r\n\r\n    handleNoteChange = (e) => {\r\n        // e.preventDefault();\r\n        console.log(\"on change calling\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleUpdateNote = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            noteId: this.state.noteId,\r\n            title: this.state.title,\r\n            description: this.state.description\r\n\r\n        }\r\n\r\n        noteService.updateNote(data).then((data) => {\r\n            console.log(data);\r\n            this.props.getnoteupdate()\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n        this.setState({ modalIsOpen: false })\r\n    }\r\n\r\n    modalOpen = (e, data) => {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            modalIsOpen: true,\r\n            noteId: data.id\r\n        });\r\n        console.log(this.state.noteId);\r\n\r\n\r\n    }\r\n    handleClickOpen = (e, data) => {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            open: true,\r\n            noteId: data.id,\r\n            title: data.title,\r\n            description: data.description\r\n        })\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    };\r\n    setColor = (color) => {\r\n        console.log(color);\r\n        this.setState = ({\r\n            clr: color\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className='container-card'>\r\n                    {\r\n                        this.props.NotesArray.filter((data) => data.isDeleted === false).filter((data) => data.isArchived === false).map((data) => (\r\n                            <StylesProvider injectFirst>\r\n                                <Card key={data.id} className='card' variant='outlined' style={{ background: data.color }}>\r\n                                    <CardContent onClick={(e) => this.handleClickOpen(e, data)}>\r\n\r\n                                        <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                            {data.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                            {data.description}\r\n                                        </Typography>\r\n\r\n                                        {/* <GetNote /> */}\r\n\r\n\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <div className='icons'>\r\n                                            <DisplayIcons\r\n                                                noteobject={data}\r\n                                                setcolor={this.setColor}\r\n                                                edit={false}\r\n                                                getUpdate={this.props.getnoteupdate}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </CardActions>\r\n\r\n                                </Card>\r\n                            </StylesProvider>\r\n\r\n\r\n                        ))\r\n                    }\r\n                    <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open} >\r\n                        <div className='modalnote'>\r\n                            <div className=\"title pd\">\r\n                                <InputBase placeholder='title' value={this.state.title} fullWidth name='title' onChange={this.handleNoteChange} />\r\n                                <IconButton>\r\n                                    <img className=\"logoIcon\" src={logoicon} size=\"small\" />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className='note pd'>\r\n                                <InputBase placeholder='desc' value={this.state.description} fullWidth name='description' onChange={this.handleNoteChange} />\r\n                            </div>\r\n                            <div >\r\n\r\n                            </div>\r\n                            <div><DisplayIcons\r\n                                id={this.state.noteId}\r\n                                edit={true}\r\n                                setClr={this.state.clr} /></div>\r\n\r\n                            <div className=\"close\">\r\n                                <Button size=\"small\" onClick={this.handleUpdateNote}>Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default DisplayNotes\r\n","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx",["118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React from \"react\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../displayicons/displayicons.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nconst noteService = new NoteService()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  colorMenu: {\r\n    width: \"150px\",\r\n    height: \"120px\",\r\n    padding: \"1px\",\r\n    display: \"flex\",\r\n    flexFlow: \" column wrap\",\r\n  },\r\n  colorButton: {\r\n    margin: \"2px\",\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    \"&:hover\": {\r\n      border: \"black 1px solid\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst DisplayIcons = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorE2, setAnchorE2] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [color, setColor] = React.useState(false);\r\n  const [showColorList, setShowColorList] = React.useState(false);\r\n  const [noteId, setNoteId] = React.useState(props.editId);\r\n  const [title, setTitle] = React.useState(props.editTitle);\r\n  const [description, setDescription] = React.useState(props.editDisc);\r\n  const colorsHandleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const colorsHandleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const passColor = (e, colr) => {\r\n    e.stopPropagation();\r\n    if (!props.edit) {\r\n      let data = {\r\n        color: colr,\r\n        noteIdList: [props.noteobject.id],\r\n      };\r\n      noteService.postColor(data)\r\n        .then((data) => {\r\n          console.log(\"Update Color: \" + data);\r\n          console.log(colr);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Update Color Error = \" + err);\r\n        });\r\n    }else if(props.edit) {\r\n      let data = {\r\n        color: colr,\r\n        noteIdList: [props.id],\r\n      };\r\n      noteService.postColor(data)\r\n        .then((data) => {\r\n          console.log(\"Update Color: \" + data);\r\n          console.log(colr);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Update Color Error = \" + err);\r\n        });\r\n    }\r\n    props.setcolor(colr)\r\n  };\r\n  const deleteHandleOpen = (event) => {\r\n    setAnchorE2(event.currentTarget);\r\n  };\r\n\r\n  const deletesHandleClose = () => {\r\n    setAnchorE2(null);\r\n  };\r\n  const archive = () => {\r\n    let data = {\r\n      noteIdList: [props.noteobject.id],\r\n      isArchived: true,\r\n    };\r\n    console.log(data)\r\n    noteService.archiveNote(data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.getUpdate()\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error = \" + err);\r\n      });\r\n  };\r\n  const deleted = () => {\r\n    let data = {\r\n      noteIdList: [props.noteobject.id],\r\n      isDeleted: true,\r\n    }\r\n\r\n    console.log(data);\r\n    noteService.deleteNote(data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.getUpdate()\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error = \" + err);\r\n      });\r\n    setAnchorE2(null);\r\n  };\r\n  const handlecolor = () => {\r\n    setColor(true)\r\n  }\r\n  const handlecolorOut = () => {\r\n    setColor(false)\r\n  }\r\n  const DATA = [\r\n    { id: \"#e6c9a8\" },\r\n    { id: \"#FFFFFF\" },\r\n    { id: \"#D0C0C0\" },\r\n    { id: \"#DBA9A9\" },\r\n    { id: \"#fbbc04\" },\r\n    { id: \"#00FF00\" },\r\n    { id: \"#00FFFF\" },\r\n    { id: \"#ccff90\" },\r\n    { id: \"#e8eaed\" },\r\n    { id: \"#d7aefb\" },\r\n    { id: \"#a7ffeb\" },\r\n    { id: \"#fff475\" },\r\n  ];\r\n  const ColorBlock = () => {\r\n    return (\r\n      <div className={classes.colorMenu} onMouseLeave={colorsHandleClose}>\r\n        {DATA.map((color) => (\r\n          <IconButton\r\n            className={classes.colorButton}\r\n            onClick={(e) => passColor(e, color.id)}\r\n            style={{ backgroundColor: color.id }}\r\n          ></IconButton>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"tools\">\r\n      <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n        <AddAlertOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Collaborator\">\r\n        <PersonAddOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Change color\"\r\n        onMouseOver={colorsHandleClick}>\r\n        <ColorLensOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Add image\">\r\n        <ImageOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Archive note\">\r\n        <ArchiveOutlinedIcon fontSize=\"small\" onClick={archive} />\r\n      </IconButton>\r\n      <IconButton aria-label=\"More\">\r\n        <MoreVertOutlinedIcon fontSize=\"small\" onClick={deleteHandleOpen} />\r\n      </IconButton>\r\n      <div\r\n        className={classes.colorWindow}\r\n        style={{ display: open ? \"block\" : \"none\" }}\r\n        onClick={colorsHandleClose}\r\n      >\r\n        <Paper open={Boolean(open)}>\r\n          <Menu\r\n            open={Boolean(open)}\r\n            className={classes.colorPaper}\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n          >\r\n            <ColorBlock className=\"colorBlock\" />\r\n          </Menu>\r\n        </Paper>\r\n      </div>\r\n      <div>\r\n        <Paper>\r\n          <Menu\r\n            anchorEl={anchorE2}\r\n            open={Boolean(anchorE2)}\r\n            onClose={deletesHandleClose}\r\n          >\r\n            <MenuItem onClick={deleted}>Delete</MenuItem>\r\n          </Menu>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DisplayIcons;","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js",[],["131","132"],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\history.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\authroute\\authroute.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\privateroute\\privateroute.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\utility.jsx",["133","134"],"const emailpattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\nconst passwordpattern= /^(?=.*[\\w])(?=.*[\\W])[\\w\\W]{8,}$/;\r\nmodule.exports = {\r\n    isemailValid(email){\r\n        if(email.trim().length===0){\r\n            return false;\r\n        }\r\n        let regex = new RegExp(emailpattern);\r\n        return regex.test(email)\r\n    },\r\n    ispasswordValid(password){\r\n        let regex = new RegExp(passwordpattern);\r\n        return regex.test(password)\r\n    }\r\n}",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":70,"column":21,"nodeType":"141","endLine":70,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":71,"column":42,"nodeType":"141","endLine":71,"endColumn":49},{"ruleId":"139","severity":1,"message":"140","line":100,"column":29,"nodeType":"141","endLine":100,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":101,"column":51,"nodeType":"141","endLine":101,"endColumn":81},{"ruleId":"139","severity":1,"message":"140","line":102,"column":52,"nodeType":"141","endLine":102,"endColumn":82},{"ruleId":"139","severity":1,"message":"140","line":103,"column":47,"nodeType":"141","endLine":103,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":104,"column":116,"nodeType":"141","endLine":104,"endColumn":146},{"ruleId":"139","severity":1,"message":"140","line":105,"column":107,"nodeType":"141","endLine":105,"endColumn":137},{"ruleId":"142","severity":1,"message":"143","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":19},{"ruleId":"142","severity":1,"message":"148","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"149","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"150","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":37},{"ruleId":"142","severity":1,"message":"151","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":29,"column":19,"nodeType":"154","messageId":"155","endLine":29,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":32,"column":26,"nodeType":"154","messageId":"155","endLine":32,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":56,"column":19,"nodeType":"154","messageId":"155","endLine":56,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":59,"column":26,"nodeType":"154","messageId":"155","endLine":59,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":75,"column":17,"nodeType":"141","endLine":75,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":136,"column":37,"nodeType":"141","endLine":136,"endColumn":93},{"ruleId":"142","severity":1,"message":"156","line":39,"column":16,"nodeType":"144","messageId":"145","endLine":39,"endColumn":23},{"ruleId":"142","severity":1,"message":"157","line":40,"column":10,"nodeType":"144","messageId":"145","endLine":40,"endColumn":15},{"ruleId":"142","severity":1,"message":"158","line":41,"column":10,"nodeType":"144","messageId":"145","endLine":41,"endColumn":23},{"ruleId":"142","severity":1,"message":"159","line":41,"column":25,"nodeType":"144","messageId":"145","endLine":41,"endColumn":41},{"ruleId":"142","severity":1,"message":"160","line":42,"column":10,"nodeType":"144","messageId":"145","endLine":42,"endColumn":16},{"ruleId":"142","severity":1,"message":"161","line":42,"column":18,"nodeType":"144","messageId":"145","endLine":42,"endColumn":27},{"ruleId":"142","severity":1,"message":"162","line":43,"column":10,"nodeType":"144","messageId":"145","endLine":43,"endColumn":15},{"ruleId":"142","severity":1,"message":"163","line":43,"column":17,"nodeType":"144","messageId":"145","endLine":43,"endColumn":25},{"ruleId":"142","severity":1,"message":"164","line":44,"column":10,"nodeType":"144","messageId":"145","endLine":44,"endColumn":21},{"ruleId":"142","severity":1,"message":"165","line":44,"column":23,"nodeType":"144","messageId":"145","endLine":44,"endColumn":37},{"ruleId":"142","severity":1,"message":"166","line":122,"column":9,"nodeType":"144","messageId":"145","endLine":122,"endColumn":20},{"ruleId":"142","severity":1,"message":"167","line":125,"column":9,"nodeType":"144","messageId":"145","endLine":125,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":186,"column":13,"nodeType":"170","endLine":186,"endColumn":37},{"ruleId":"135","replacedBy":"171"},{"ruleId":"137","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":39,"suggestions":"177"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":58,"nodeType":"175","messageId":"176","endLine":1,"endColumn":59,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'DisplayIcons' is defined but never used.","Identifier","unusedVar","'CreateNote' is defined but never used.","'DisplayNote' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setOpen' is assigned a value but never used.","'color' is assigned a value but never used.","'showColorList' is assigned a value but never used.","'setShowColorList' is assigned a value but never used.","'noteId' is assigned a value but never used.","'setNoteId' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'handlecolor' is assigned a value but never used.","'handlecolorOut' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["179"],["180"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["181","182"],["183","184"],"no-global-assign","no-unsafe-negation",{"messageId":"185","fix":"186","desc":"187"},{"messageId":"188","fix":"189","desc":"190"},{"messageId":"185","fix":"191","desc":"187"},{"messageId":"188","fix":"192","desc":"190"},"removeEscape",{"range":"193","text":"194"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"195","text":"196"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"197","text":"194"},{"range":"198","text":"196"},[37,38],"",[37,37],"\\",[57,58],[57,57]]