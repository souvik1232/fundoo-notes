[{"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\index.js":"1","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\App.js":"2","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js":"3","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx":"4","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx":"5","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx":"6","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx":"7","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx":"8","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx":"9","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx":"10","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx":"11","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js":"12","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js":"13","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx":"14","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx":"15","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx":"16","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js":"17","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\history.js":"18"},{"size":501,"mtime":1612359658725,"results":"19","hashOfConfig":"20"},{"size":1324,"mtime":1618373646309,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":5918,"mtime":1614315061096,"results":"23","hashOfConfig":"20"},{"size":3247,"mtime":1612710950306,"results":"24","hashOfConfig":"20"},{"size":5056,"mtime":1618379846618,"results":"25","hashOfConfig":"20"},{"size":1039,"mtime":1614659443946,"results":"26","hashOfConfig":"20"},{"size":3313,"mtime":1612849278665,"results":"27","hashOfConfig":"20"},{"size":8871,"mtime":1612856940811,"results":"28","hashOfConfig":"20"},{"size":3406,"mtime":1614659388727,"results":"29","hashOfConfig":"20"},{"size":3038,"mtime":1614659691666,"results":"30","hashOfConfig":"20"},{"size":578,"mtime":1612792911784,"results":"31","hashOfConfig":"20"},{"size":1292,"mtime":1614657738489,"results":"32","hashOfConfig":"20"},{"size":3415,"mtime":1614059426223,"results":"33","hashOfConfig":"20"},{"size":5560,"mtime":1614082768763,"results":"34","hashOfConfig":"20"},{"size":6722,"mtime":1614083513999,"results":"35","hashOfConfig":"20"},{"size":568,"mtime":1613726435655,"results":"36","hashOfConfig":"20"},{"size":85,"mtime":1618028978015,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l3y9x",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\index.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\App.js",["83","84"],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx",["85"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport './login.scss'\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport UserService from \"../../services/userservice\";\r\nconst userService = new UserService()\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            snackbaropen: false,\r\n            snackbarmsg: ''\r\n        }\r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    }\r\n\r\n        handleChange = (e) => {\r\n            // e.preventDefault();\r\n            console.log(\"on change calling\", e.target.value);\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n\r\n\r\n        handleRegister = (e) => {\r\n            e.preventDefault();\r\n            let data = {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                service: \"advance\"\r\n            }\r\n\r\n            userService.login(data).then((response) => {\r\n                console.log(\"response successfull\", response);\r\n                localStorage.setItem('token',response.data.id);\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Logged In' })\r\n            }).catch((error) => {\r\n                console.log(\"error\", error);\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'error' })\r\n            })\r\n        }\r\n\r\n        createPage = () => {\r\n            window.location.href = \"http://localhost:4200/register\"\r\n        }\r\n        forgotPage = () => {\r\n            window.location.href = \"http://localhost:4200/forgotpassword\"\r\n        }\r\n        render() {\r\n\r\n            return (\r\n                <div>\r\n\r\n\r\n                    <div className=\"container-body1\">\r\n                        <div className=\"box1\"><Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n                            <span style={{ color: \"#0606f8\" }}>F</span>\r\n                            <span style={{ color: \"#d10303\" }}>u</span>\r\n                            <span style={{ color: \"#f0b000\" }}>n</span>\r\n                            <span style={{ color: \"#0606f8\" }}>d</span>\r\n                            <span style={{ color: \"green\" }}>o</span>\r\n                            <span style={{ color: \"#d10303\" }}>o</span>\r\n                        </Typography></div>\r\n                        <div className=\"sign\"><h4>Sign in</h4></div>\r\n                        <div className=\"abc\"><h6>Use your Google Account</h6></div>\r\n                        <div className=\"form\"><Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                {/* <Form.Label>Email address</Form.Label> */}\r\n                                <TextField\r\n                                    value={this.state.email}\r\n                                    name=\"email\"\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    // color=\"blue\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control type=\"email\" placeholder=\"Enter email\" /> */}\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                {/* <Form.Label>Password</Form.Label> */}\r\n                                <TextField\r\n                                    value={this.state.password}\r\n                                    name=\"password\"\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Password\"\r\n                                    placeholder=\"\"\r\n                                    name=\"password\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control type=\"password\" placeholder=\"Password\" /> */}\r\n                            </Form.Group>\r\n                            <Button onClick={this.forgotPage} className=\"frgt\" variant=\"link\">Forgot password?</Button>\r\n                            <Form.Group controlId=\"formBasicCheckbox\">\r\n                            </Form.Group>\r\n                            <Button onClick={this.createPage} className=\"link\" variant=\"link\">Create account</Button>\r\n                            <Button onClick={this.handleRegister} className=\"but1\" variant=\"primary\" type=\"submit\">\r\n                                Next\r\n                            </Button>\r\n                            <Snackbar\r\n                                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                                open={this.state.snackbaropen}\r\n                                autoHideDuration={3000}\r\n                                onClose={this.snackbarClose}\r\n                                message={<span id=\"message-id\">registered successfully</span>}\r\n                            // action\r\n                            />\r\n                        </Form></div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n export default Login",["86","87"],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx",["88","89","90","91","92","93","94","95"],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx",["96","97","98","99","100"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport './register.scss';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UserService from \"../../services/userservice\";\r\nconst userService = new UserService()\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            email: '',\r\n            snackbaropen: false,\r\n            snackbarmsg: ''\r\n        };\r\n    }\r\n    snackbarClose =(event) =>{\r\n        this.setState({snackbaropen:false});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // e.preventDefault();\r\n        console.log(\"on change calling\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            service: \"advance\"\r\n        }\r\n\r\n        userService.registration(data).then((response) => {\r\n            console.log(\"response successfull\", response);\r\n            this.setState({snackbaropen:true,snackbarmsg:'registered'})\r\n        }).catch((error) => {\r\n            console.log(\"error\", error);\r\n            this.setState({snackbaropen:true,snackbarmsg:error})\r\n        })\r\n    }\r\n    login = () => {\r\n        window.location.href = \"http://localhost:4200/login\"\r\n    }\r\n    myFunction = () => {\r\n        let x = document.getElementById(\"outlined-textarea3\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div className=\"container1-body\">\r\n                    \r\n\r\n                    <div className=\"box2\"><Typography className=\"app_name1\" variant=\"h5\" color=\"textSecondary\">\r\n                        <span style={{ color: \"#0606f8\" }}>F</span>\r\n                        <span style={{ color: \"#d10303\" }}>u</span>\r\n                        <span style={{ color: \"#f0b000\" }}>n</span>\r\n                        <span style={{ color: \"#0606f8\" }}>d</span>\r\n                        <span style={{ color: \"green\" }}>o</span>\r\n                        <span style={{ color: \"#d10303\" }}>o</span>\r\n                    </Typography></div>\r\n                    <div className='text'><h4>Create your Fundoo Account</h4></div>\r\n                    <Form className=\"pwd\">\r\n                        <Row>\r\n                            <Col className=\"fname\">\r\n                                <TextField\r\n                                    value={this.state.firstName}\r\n                                    name=\"firstName\"\r\n                                    id=\"outlined-textarea1\"\r\n                                    label=\"FirstName\"\r\n                                    placeholder=\"\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    margin=\"dense\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control placeholder=\"First name\" /> */}\r\n                            </Col>\r\n\r\n                            <Col className='lname'>\r\n                                <TextField\r\n                                    value={this.state.lastName}\r\n                                    name=\"lastName\"\r\n                                    id=\"outlined-textarea1\"\r\n                                    label=\"LastName\"\r\n                                    placeholder=\"\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    // type=\"text\"\r\n                                    size=\"small\"\r\n                                    margin=\"dense\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control placeholder=\"Last name\" /> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"user\"><TextField\r\n                            value={this.state.email}\r\n                            name=\"email\"\r\n                            id=\"outlined-textarea2\"\r\n                            label=\"Username\"\r\n                            placeholder=\"\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            // color=\"blue\"\r\n                            helperText=\"You can use letters,numbers & symbols\"\r\n                            // size=\"medium\"\r\n                            margin=\"dense\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                            <span class=\"gmail\">@gmail.com</span>\r\n                        </div>\r\n                        <div className=\"line1\"><Button variant=\"link\">Use my current email address instead</Button></div>\r\n                        <div className=\"cnfmpass\">\r\n                            <Row>\r\n                                <Col className=\"pass1\">\r\n                                    <TextField\r\n                                        value={this.state.password}\r\n                                        name=\"password\"\r\n                                        id=\"outlined-textarea3\"\r\n                                        label=\"Password\"\r\n                                        placeholder=\"\"\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        size=\"small\"\r\n                                        margin=\"dense\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    {/* <Form.Control placeholder=\"First name\" /> */}\r\n                                </Col>\r\n\r\n                                <Col className='cnfm1'>\r\n                                    <TextField\r\n                                        id=\"outlined-textarea3\"\r\n                                        label=\"Confirm\"\r\n                                        placeholder=\"\"\r\n                                        name=\"\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        size=\"small\"\r\n                                        margin=\"dense\"\r\n                                    />\r\n                                    {/* <Form.Control placeholder=\"Last name\" /> */}\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"hint\">Use 8 or more characters with a mix of letters, numbers & symbols </div>\r\n                        </div>\r\n                        <Form.Group id=\"formGridCheckbox\">\r\n                            <Form.Check onClick={this.myFunction} type=\"checkbox\" label=\"Show password\" />\r\n                        </Form.Group>\r\n                        <Button onClick={this.login} className=\"link2\" variant=\"link\">Sign in instead</Button>\r\n                        <Button onClick={this.handleRegister} className=\"but2\" variant=\"primary\" type=\"submit\">\r\n                            Next\r\n  </Button>\r\n  <Snackbar\r\n                    anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                    open = {this.state.snackbaropen}\r\n                    autoHideDuration = {3000}\r\n                    onClose={this.snackbarClose}\r\n                    message = {<span id =\"message-id\">registered successfully</span>}\r\n                    // action\r\n                    />\r\n                        <div className=\"accnt\"><img /></div>\r\n                        {/* <div>One account. All of Google working for you.</div> */}\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Register","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx",["101","102","103"],"import React, { Component } from 'react'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport RestoreFromTrashOutlinedIcon from '@material-ui/icons/RestoreFromTrashOutlined';\r\nimport CreateNote from '../createNote/createNote'\r\nimport DisplayNote from '../displayNotes/displayNotes'\r\nimport './gettrash.scss'\r\nconst noteService = new NoteService()\r\n\r\nclass getNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            trash: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.note()\r\n    }\r\n\r\n    note = () => {\r\n        console.log('called');\r\n        noteService.gettrashNote().then((res) => {\r\n            console.log(res.data.data.data);\r\n            this.setState({ trash: res.data.data.data })\r\n            this.setState({ trash: this.state.trash.reverse() })\r\n        })\r\n    }\r\n    deleteforever = (e, id) => {\r\n        let data = {\r\n            // cardidList:this.cardId,\r\n            noteIdList: [id],\r\n            isDeleted: false,\r\n        }\r\n\r\n        console.log(data);\r\n        noteService.foreverDelete(data)\r\n            .then((data) => {\r\n                console.log(data);\r\n                this.note()\r\n                // props.getall();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error = \" + err);\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mainContent\">\r\n                {\r\n                    this.state.trash.map((data) => (\r\n                        <Card key={data.id} className='card' variant='outlined' >\r\n                            <CardContent onClick={(e) => this.modalOpen(e, data)}>\r\n\r\n                                <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                    {data.description}\r\n                                </Typography>\r\n\r\n                                {/* <GetNote /> */}\r\n\r\n\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className='icons'>\r\n                                    <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n                                        <DeleteForeverOutlinedIcon fontSize=\"small\" onClick={(e)=>{this.deleteforever(e,data.id)}}/>\r\n                                    </IconButton>\r\n                                    <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n                                        <RestoreFromTrashOutlinedIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default getNote","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx",["104","105","106"],"import React, { Component } from 'react'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UnarchiveOutlinedIcon from '@material-ui/icons/UnarchiveOutlined';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport CreateNote from '../createNote/createNote'\r\nimport DisplayNote from '../displayNotes/displayNotes'\r\nimport './getarchive.scss'\r\nconst noteService = new NoteService()\r\n\r\nclass getNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            archive: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.note()\r\n    }\r\n\r\n    note = () => {\r\n        console.log('called');\r\n        noteService.getarchiveNote().then((res) => {\r\n            console.log(res.data.data.data);\r\n            this.setState({ archive: res.data.data.data })\r\n            this.setState({ archive: this.state.archive.reverse() })\r\n        })\r\n    }\r\n    unarchive=(e,id)=>{\r\n        let data = {\r\n            noteIdList: [id],\r\n            isArchived: false,\r\n          };\r\n          console.log(data)\r\n          noteService.archiveNote(data)\r\n            .then((data) => {\r\n              console.log(data);\r\n              // props.getupdate()\r\n              this.note()\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"error = \" + err);\r\n            });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mainContent\">\r\n                {\r\n                    this.state.archive.map((data) => (\r\n                        <Card key={data.id} className='card' variant='outlined' >\r\n                            <CardContent onClick={(e) => this.modalOpen(e, data)}>\r\n\r\n                                <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                    {data.description}\r\n                                </Typography>\r\n\r\n                                {/* <GetNote /> */}\r\n\r\n\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className='icons'>\r\n                                    <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n                                        <UnarchiveOutlinedIcon fontSize=\"small\" onClick={(e)=>{this.unarchive(e,data.id)}} />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default getNote","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js",["107"],"import axios from \"axios\";\r\nimport Axios from \"./axiosservice\";\r\n\r\nconst axiosService = new Axios()\r\n\r\nexport default class NoteService {\r\n    addNote = (data) => {\r\n        return axiosService.Post('notes/addNotes', data, localStorage.getItem('token'))\r\n\r\n    }\r\n    getNote = () => {\r\n        return axiosService.Get('notes/getNotesList', localStorage.getItem('token'))\r\n    }\r\n    updateNote = (data) => {\r\n        return axiosService.Post('notes/updateNotes', data, localStorage.getItem('token'))\r\n    }\r\n    deleteNote = (data) => {\r\n        return axiosService.Post('notes/trashNotes', data, localStorage.getItem('token'))\r\n    }\r\n    gettrashNote = () => {\r\n        return axiosService.Get('notes/getTrashNotesList', localStorage.getItem('token'))\r\n    }\r\n    archiveNote = (data) => {\r\n        return axiosService.Post('notes/archiveNotes', data, localStorage.getItem('token'))\r\n    }\r\n    getarchiveNote = () => {\r\n        return axiosService.Get('notes/getArchiveNotesList', localStorage.getItem('token'))\r\n    }\r\n    postColor = (data) => {\r\n        return axiosService.Post('notes/changesColorNotes',data,localStorage.getItem('token'))\r\n    }\r\n    foreverDelete = (data)=>{\r\n        return axiosService.Post('notes/deleteForeverNotes',data,localStorage.getItem('token'))\r\n    }\r\n}","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx",["108","109","110","111","112","113","114","115"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport logoicon from \"../icons/pin.jpeg\";\r\nimport '../createNote/createNote.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nvar checkOpen = \"open\";\r\n\r\nconst noteService = new NoteService()\r\n\r\nexport default function AddNote(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, settitle] = React.useState('');\r\n  const [description, setdescription] = React.useState('');\r\n  const handletitle = (Event) => {\r\n    settitle(Event.target.value)\r\n  }\r\n\r\n  const handledescription = (Event) => {\r\n    setdescription(Event.target.value)\r\n  }\r\n  const NotePadOpenClose = () => {\r\n    if (checkOpen == \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    } else if (checkOpen == \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    }\r\n    console.log(checkOpen);\r\n  }\r\n\r\n  const handleNote=()=>{\r\n    let data = {\r\n      title : title,\r\n      description : description,\r\n    }\r\n    console.log(data)\r\n    if (data[title]===null|| data[description]===null) {\r\n      alert(\"Fill the note\");\r\n    }else{\r\n    noteService.addNote(data).then((data)=>{\r\n      props.getnoteupdate()\r\n      console.log(data);\r\n    })\r\n    .catch ((error)=>{\r\n      console.log(error)\r\n    })\r\n  }\r\n    if (checkOpen == \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    } else if (checkOpen == \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    }\r\n    \r\n    // window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"notesone\">\r\n      {open ?\r\n        <div className=\"contain container1\">\r\n          <div className=\"note1\" >\r\n            <div className=\"title pd\">\r\n              <InputBase placeholder='Title...' fullWidth name='title' onChange={handletitle} />\r\n              <IconButton>\r\n                <img className=\"logoIcon\" src={logoicon} size=\"small\" />\r\n              </IconButton>\r\n            </div>\r\n            <div className='note pd'>\r\n              <InputBase placeholder='Take a note...' fullWidth name='description' onChange={handledescription} />\r\n            </div>\r\n          </div>\r\n          <br>\r\n          </br>\r\n\r\n          <div className=\"toolbar\">\r\n            <div className=\"toolbar1\">\r\n              <DisplayIcons />\r\n            </div>\r\n            <div className=\"close-button\">\r\n              <Button size=\"small\" onClick={handleNote}>Close</Button>\r\n            </div>\r\n          </div>\r\n        </div> :\r\n        <div className=\"contain container\" >\r\n          <div className=\"note\">\r\n            <InputBase placeholder='Take a note...' fullWidth onClick={NotePadOpenClose} />\r\n          </div>\r\n          <IconButton>\r\n            <CheckBoxOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <BrushIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ImageOutlinedIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n\r\n      }\r\n    </div>\r\n  )\r\n\r\n}","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx",["116"],"import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport logoicon from \"../icons/pin.jpeg\";\r\nimport './displayNotes.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Modal from 'react-modal'\r\n\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst noteService = new NoteService()\r\n\r\n\r\nclass DisplayNotes extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            noteId: '',\r\n            title: '',\r\n            description: '',\r\n            modalIsOpen: false,\r\n            open: '',\r\n            clr:'#fafafa'\r\n        }\r\n    }\r\n\r\n    handleNoteChange = (e) => {\r\n        // e.preventDefault();\r\n        console.log(\"on change calling\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleUpdateNote = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            noteId: this.state.noteId,\r\n            title: this.state.title,\r\n            description: this.state.description\r\n\r\n        }\r\n\r\n        noteService.updateNote(data).then((data) => {\r\n            console.log(data);\r\n            this.props.getnoteupdate()\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n        this.setState({ modalIsOpen: false })\r\n    }\r\n\r\n    modalOpen = (e, data) => {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            modalIsOpen: true,\r\n            noteId: data.id\r\n        });\r\n        console.log(this.state.noteId);\r\n\r\n\r\n    }\r\n    handleClickOpen = (e, data) => {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            open: true,\r\n            noteId: data.id,\r\n            title: data.title,\r\n            description: data.description\r\n        })\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    };\r\n    setColor =(color)=>{\r\n        console.log(color);\r\n        this.setState=({\r\n            clr:color\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className='container-card'>\r\n                    {\r\n                        this.props.NotesArray.filter((data) => data.isDeleted === false).filter((data) => data.isArchived === false).map((data) => (\r\n                            <Card key={data.id} className='card' variant='outlined' style={{background: data.color}}>\r\n                                <CardContent onClick={(e) => this.handleClickOpen(e, data)}>\r\n\r\n                                    <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                        {data.title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                        {data.description}\r\n                                    </Typography>\r\n\r\n                                    {/* <GetNote /> */}\r\n\r\n\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <div className='icons'>\r\n                                        <DisplayIcons\r\n                                            noteobject={data}\r\n                                            setcolor={this.setColor}\r\n                                            edit={false}\r\n                                            getUpdate={this.props.getnoteupdate}\r\n                                        />\r\n                                    </div>\r\n\r\n                                </CardActions>\r\n\r\n                            </Card>\r\n\r\n\r\n                        ))\r\n                    }\r\n                    <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open} >\r\n                        <div className='modalnote'>\r\n                            <div className=\"title pd\">\r\n                                <InputBase placeholder='title' value={this.state.title} fullWidth name='title' onChange={this.handleNoteChange} />\r\n                                <IconButton>\r\n                                    <img className=\"logoIcon\" src={logoicon} size=\"small\" />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className='note pd'>\r\n                                <InputBase placeholder='desc' value={this.state.description} fullWidth name='description' onChange={this.handleNoteChange} />\r\n                            </div>\r\n                            <div >\r\n\r\n                            </div>\r\n                            <div><DisplayIcons\r\n                            id={this.state.noteId}\r\n                            edit={true}\r\n                            setClr={this.state.clr}/></div>\r\n\r\n                            <div className=\"close\">\r\n                                <Button size=\"small\" onClick={this.handleUpdateNote}>Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default DisplayNotes\r\n","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React from \"react\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport '../displayicons/displayicons.scss'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport { PowerInputSharp } from \"@material-ui/icons\";\r\nconst noteService = new NoteService()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  colorMenu: {\r\n    width: \"150px\",\r\n    height: \"120px\",\r\n    padding: \"1px\",\r\n    display: \"flex\",\r\n    flexFlow: \" column wrap\",\r\n  },\r\n  colorButton: {\r\n    margin: \"2px\",\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    \"&:hover\": {\r\n      border: \"black 1px solid\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst DisplayIcons = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorE2, setAnchorE2] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [color, setColor] = React.useState(false);\r\n  const [showColorList, setShowColorList] = React.useState(false);\r\n  const [noteId, setNoteId] = React.useState(props.editId);\r\n  const [title, setTitle] = React.useState(props.editTitle);\r\n  const [description, setDescription] = React.useState(props.editDisc);\r\n  // let Bgcolor = props.color\r\n  const colorsHandleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const colorsHandleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const passColor = (e, colr) => {\r\n    e.stopPropagation();\r\n    if (!props.edit) {\r\n      let data = {\r\n        color: colr,\r\n        noteIdList: [props.noteobject.id],\r\n      };\r\n      noteService.postColor(data)\r\n        .then((data) => {\r\n          console.log(\"Update Color: \" + data);\r\n          console.log(colr);\r\n          // props.getall();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Update Color Error = \" + err);\r\n        });\r\n    }else if(props.edit) {\r\n      let data = {\r\n        color: colr,\r\n        noteIdList: [props.id],\r\n      };\r\n      noteService.postColor(data)\r\n        .then((data) => {\r\n          console.log(\"Update Color: \" + data);\r\n          console.log(colr);\r\n          // props.getall();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Update Color Error = \" + err);\r\n        });\r\n    }\r\n    // props.setcolor=colr;\r\n    props.setcolor(colr)\r\n  };\r\n  const deleteHandleOpen = (event) => {\r\n    setAnchorE2(event.currentTarget);\r\n  };\r\n\r\n  const deletesHandleClose = () => {\r\n    setAnchorE2(null);\r\n  };\r\n  const archive = () => {\r\n    let data = {\r\n      noteIdList: [props.noteobject.id],\r\n      isArchived: true,\r\n    };\r\n    console.log(data)\r\n    noteService.archiveNote(data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        // props.getupdate()\r\n        props.getUpdate()\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error = \" + err);\r\n      });\r\n  };\r\n  const deleted = () => {\r\n    let data = {\r\n      // cardidList:this.cardId,\r\n      noteIdList: [props.noteobject.id],\r\n      isDeleted: true,\r\n    }\r\n\r\n    console.log(data);\r\n    noteService.deleteNote(data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        // props.getall();\r\n        props.getUpdate()\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error = \" + err);\r\n      });\r\n    setAnchorE2(null);\r\n    // props.setDelete();\r\n  };\r\n\r\n  //   const selectColor =()=>{\r\n  //       PowerInputSharp.setBg\r\n  //   }\r\n  const handlecolor = () => {\r\n    setColor(true)\r\n  }\r\n  const handlecolorOut = () => {\r\n    setColor(false)\r\n  }\r\n  const DATA = [\r\n    { id: \"#e6c9a8\" },\r\n    { id: \"#FFFFFF\" },\r\n    // { id: \"#CFAFAF\" },\r\n    { id: \"#D0C0C0\" },\r\n    { id: \"#DBA9A9\" },\r\n    // { id: \"#DF9D9D\" },\r\n    { id: \"#fbbc04\" },\r\n    { id: \"#00FF00\" },\r\n    // { id: \"#008000\" },\r\n    { id: \"#00FFFF\" },\r\n    // { id: \"#008080\" },\r\n    // { id: \"#000080\" },\r\n    // { id: \"#CD5C5C\" },\r\n    { id: \"#ccff90\" },\r\n    { id: \"#e8eaed\" },\r\n    { id: \"#d7aefb\" },\r\n    { id: \"#a7ffeb\" },\r\n    { id: \"#fff475\" },\r\n  ];\r\n  //   const selectColor = (value) => {\r\n  //     setBgColor(value);\r\n  //   };\r\n  const ColorBlock = () => {\r\n    return (\r\n      <div className={classes.colorMenu} onMouseLeave={colorsHandleClose}>\r\n        {DATA.map((color) => (\r\n          <IconButton\r\n            className={classes.colorButton}\r\n            onClick={(e) => passColor(e, color.id)}\r\n            style={{ backgroundColor: color.id }}\r\n          ></IconButton>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"tools\">\r\n      <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n        <AddAlertOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Collaborator\">\r\n        <PersonAddOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Change color\"\r\n        onMouseOver={colorsHandleClick}>\r\n        <ColorLensOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Add image\">\r\n        <ImageOutlinedIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <IconButton aria-label=\"Archive note\">\r\n        <ArchiveOutlinedIcon fontSize=\"small\" onClick={archive} />\r\n      </IconButton>\r\n      <IconButton aria-label=\"More\">\r\n        <MoreVertOutlinedIcon fontSize=\"small\" onClick={deleteHandleOpen} />\r\n      </IconButton>\r\n      <div\r\n        className={classes.colorWindow}\r\n        style={{ display: open ? \"block\" : \"none\" }}\r\n        onClick={colorsHandleClose}\r\n      >\r\n        <Paper open={Boolean(open)}>\r\n          <Menu\r\n            open={Boolean(open)}\r\n            className={classes.colorPaper}\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n          >\r\n            <ColorBlock className=\"colorBlock\" />\r\n          </Menu>\r\n        </Paper>\r\n      </div>\r\n      <div>\r\n        <Paper>\r\n          <Menu\r\n            anchorEl={anchorE2}\r\n            open={Boolean(anchorE2)}\r\n            onClose={deletesHandleClose}\r\n          >\r\n            <MenuItem onClick={deleted}>Delete</MenuItem>\r\n          </Menu>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DisplayIcons;","C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js",[],"C:\\Users\\Karat\\OneDrive\\Desktop\\fundoo\\fundoo-notes\\src\\components\\history.js",[],{"ruleId":"132","severity":1,"message":"133","line":4,"column":23,"nodeType":"134","messageId":"135","endLine":4,"endColumn":29},{"ruleId":"132","severity":1,"message":"136","line":4,"column":30,"nodeType":"134","messageId":"135","endLine":4,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":102,"column":37,"nodeType":"139","endLine":102,"endColumn":52},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":70,"column":21,"nodeType":"146","endLine":70,"endColumn":77},{"ruleId":"144","severity":1,"message":"145","line":71,"column":42,"nodeType":"146","endLine":71,"endColumn":49},{"ruleId":"144","severity":1,"message":"145","line":100,"column":29,"nodeType":"146","endLine":100,"endColumn":59},{"ruleId":"144","severity":1,"message":"145","line":101,"column":51,"nodeType":"146","endLine":101,"endColumn":81},{"ruleId":"144","severity":1,"message":"145","line":102,"column":52,"nodeType":"146","endLine":102,"endColumn":82},{"ruleId":"144","severity":1,"message":"145","line":103,"column":47,"nodeType":"146","endLine":103,"endColumn":77},{"ruleId":"144","severity":1,"message":"145","line":104,"column":116,"nodeType":"146","endLine":104,"endColumn":146},{"ruleId":"144","severity":1,"message":"145","line":105,"column":107,"nodeType":"146","endLine":105,"endColumn":137},{"ruleId":"132","severity":1,"message":"147","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":18},{"ruleId":"132","severity":1,"message":"148","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":23,"column":13,"nodeType":"151","messageId":"152","endLine":23,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":145,"column":41,"nodeType":"139","endLine":145,"endColumn":56},{"ruleId":"144","severity":1,"message":"145","line":188,"column":48,"nodeType":"146","endLine":188,"endColumn":55},{"ruleId":"132","severity":1,"message":"153","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":20},{"ruleId":"132","severity":1,"message":"154","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":18},{"ruleId":"132","severity":1,"message":"155","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":19},{"ruleId":"132","severity":1,"message":"153","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":20},{"ruleId":"132","severity":1,"message":"154","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":18},{"ruleId":"132","severity":1,"message":"155","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":19},{"ruleId":"132","severity":1,"message":"156","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"157","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"158","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":37},{"ruleId":"132","severity":1,"message":"159","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":29,"column":19,"nodeType":"162","messageId":"152","endLine":29,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":32,"column":26,"nodeType":"162","messageId":"152","endLine":32,"endColumn":28},{"ruleId":"160","severity":1,"message":"161","line":56,"column":19,"nodeType":"162","messageId":"152","endLine":56,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":59,"column":26,"nodeType":"162","messageId":"152","endLine":59,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":75,"column":17,"nodeType":"146","endLine":75,"endColumn":73},{"ruleId":"144","severity":1,"message":"145","line":133,"column":37,"nodeType":"146","endLine":133,"endColumn":93},{"ruleId":"132","severity":1,"message":"163","line":13,"column":10,"nodeType":"134","messageId":"135","endLine":13,"endColumn":14},{"ruleId":"132","severity":1,"message":"164","line":16,"column":10,"nodeType":"134","messageId":"135","endLine":16,"endColumn":25},{"ruleId":"132","severity":1,"message":"165","line":41,"column":16,"nodeType":"134","messageId":"135","endLine":41,"endColumn":23},{"ruleId":"132","severity":1,"message":"166","line":42,"column":10,"nodeType":"134","messageId":"135","endLine":42,"endColumn":15},{"ruleId":"132","severity":1,"message":"167","line":43,"column":10,"nodeType":"134","messageId":"135","endLine":43,"endColumn":23},{"ruleId":"132","severity":1,"message":"168","line":43,"column":25,"nodeType":"134","messageId":"135","endLine":43,"endColumn":41},{"ruleId":"132","severity":1,"message":"169","line":44,"column":10,"nodeType":"134","messageId":"135","endLine":44,"endColumn":16},{"ruleId":"132","severity":1,"message":"170","line":44,"column":18,"nodeType":"134","messageId":"135","endLine":44,"endColumn":27},{"ruleId":"132","severity":1,"message":"171","line":45,"column":10,"nodeType":"134","messageId":"135","endLine":45,"endColumn":15},{"ruleId":"132","severity":1,"message":"172","line":45,"column":17,"nodeType":"134","messageId":"135","endLine":45,"endColumn":25},{"ruleId":"132","severity":1,"message":"173","line":46,"column":10,"nodeType":"134","messageId":"135","endLine":46,"endColumn":21},{"ruleId":"132","severity":1,"message":"174","line":46,"column":23,"nodeType":"134","messageId":"135","endLine":46,"endColumn":37},{"ruleId":"132","severity":1,"message":"175","line":136,"column":9,"nodeType":"134","messageId":"135","endLine":136,"endColumn":20},{"ruleId":"132","severity":1,"message":"176","line":139,"column":9,"nodeType":"134","messageId":"135","endLine":139,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":209,"column":13,"nodeType":"139","endLine":209,"endColumn":37},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","unexpected","'DisplayIcons' is defined but never used.","'CreateNote' is defined but never used.","'DisplayNote' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Card' is defined but never used.","'PowerInputSharp' is defined but never used.","'setOpen' is assigned a value but never used.","'color' is assigned a value but never used.","'showColorList' is assigned a value but never used.","'setShowColorList' is assigned a value but never used.","'noteId' is assigned a value but never used.","'setNoteId' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'handlecolor' is assigned a value but never used.","'handlecolorOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]