[{"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\index.js":"1","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\App.js":"2","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js":"3","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx":"4","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx":"5","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx":"6","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js":"7","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js":"8","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx":"9","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx":"10","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx":"11","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js":"12","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx":"13","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx":"14","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx":"15","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx":"16","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx":"17"},{"size":501,"mtime":1612359658725,"results":"18","hashOfConfig":"19"},{"size":1300,"mtime":1613747762575,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":5918,"mtime":1613383550966,"results":"22","hashOfConfig":"19"},{"size":3247,"mtime":1612710950306,"results":"23","hashOfConfig":"19"},{"size":8871,"mtime":1612856940811,"results":"24","hashOfConfig":"19"},{"size":578,"mtime":1612792911784,"results":"25","hashOfConfig":"19"},{"size":568,"mtime":1613726435655,"results":"26","hashOfConfig":"19"},{"size":3313,"mtime":1612849278665,"results":"27","hashOfConfig":"19"},{"size":5929,"mtime":1614058324392,"results":"28","hashOfConfig":"19"},{"size":3415,"mtime":1614059426223,"results":"29","hashOfConfig":"19"},{"size":1157,"mtime":1614016002628,"results":"30","hashOfConfig":"19"},{"size":6607,"mtime":1614060522936,"results":"31","hashOfConfig":"19"},{"size":5478,"mtime":1614060619944,"results":"32","hashOfConfig":"19"},{"size":994,"mtime":1614059512612,"results":"33","hashOfConfig":"19"},{"size":2272,"mtime":1613741212125,"results":"34","hashOfConfig":"19"},{"size":2282,"mtime":1613747708417,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1txmf5o",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\index.js",[],["76","77"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\App.js",["78","79","80"],"import logo from './logo.svg';\nimport './App.scss';\nimport Login from '../src/components/login/login';\nimport {BrowserRouter as Router, Route,Switch,Link } from 'react-router-dom';\nimport Forgot from './components/forgotpassword/forgotpassword';\nimport Register from './components/register/register';\nimport Reset from './components/reset/reset';\nimport dashboard from './components/dashboard/dashboard';\nimport getNote from './components/getNote/getNote1';\nimport gettrashNote from './components/trash/gettrash';\nimport getarchiveNote from './components/archive/getarchive';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          {/* <Switch> */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgotpassword\" component={Forgot} />\n            <Route path=\"/register\" component={Register}/>\n            <Route path=\"/resetpassword/:token\" component={Reset}/>\n            <Route path=\"/dashboard\" component={dashboard}/>\n            <Route path=\"/dashboard/notes\" component={getNote}/>\n            <Route path=\"/dashboard/trash\" component={gettrashNote}/>\n            <Route path=\"/dashboard/archive\" component={getarchiveNote}/>\n          {/* </Switch> */}\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\login\\login.jsx",["81"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport './login.scss'\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport UserService from \"../../services/userservice\";\r\nconst userService = new UserService()\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            snackbaropen: false,\r\n            snackbarmsg: ''\r\n        }\r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    }\r\n\r\n        handleChange = (e) => {\r\n            // e.preventDefault();\r\n            console.log(\"on change calling\", e.target.value);\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n\r\n\r\n        handleRegister = (e) => {\r\n            e.preventDefault();\r\n            let data = {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                service: \"advance\"\r\n            }\r\n\r\n            userService.login(data).then((response) => {\r\n                console.log(\"response successfull\", response);\r\n                localStorage.setItem('token',response.data.id);\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Logged In' })\r\n            }).catch((error) => {\r\n                console.log(\"error\", error);\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'error' })\r\n            })\r\n        }\r\n\r\n        createPage = () => {\r\n            window.location.href = \"http://localhost:4200/register\"\r\n        }\r\n        forgotPage = () => {\r\n            window.location.href = \"http://localhost:4200/forgotpassword\"\r\n        }\r\n        render() {\r\n\r\n            return (\r\n                <div>\r\n\r\n\r\n                    <div className=\"container-body1\">\r\n                        <div className=\"box1\"><Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n                            <span style={{ color: \"#0606f8\" }}>F</span>\r\n                            <span style={{ color: \"#d10303\" }}>u</span>\r\n                            <span style={{ color: \"#f0b000\" }}>n</span>\r\n                            <span style={{ color: \"#0606f8\" }}>d</span>\r\n                            <span style={{ color: \"green\" }}>o</span>\r\n                            <span style={{ color: \"#d10303\" }}>o</span>\r\n                        </Typography></div>\r\n                        <div className=\"sign\"><h4>Sign in</h4></div>\r\n                        <div className=\"abc\"><h6>Use your Google Account</h6></div>\r\n                        <div className=\"form\"><Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                {/* <Form.Label>Email address</Form.Label> */}\r\n                                <TextField\r\n                                    value={this.state.email}\r\n                                    name=\"email\"\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    // color=\"blue\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control type=\"email\" placeholder=\"Enter email\" /> */}\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                {/* <Form.Label>Password</Form.Label> */}\r\n                                <TextField\r\n                                    value={this.state.password}\r\n                                    name=\"password\"\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Password\"\r\n                                    placeholder=\"\"\r\n                                    name=\"password\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control type=\"password\" placeholder=\"Password\" /> */}\r\n                            </Form.Group>\r\n                            <Button onClick={this.forgotPage} className=\"frgt\" variant=\"link\">Forgot password?</Button>\r\n                            <Form.Group controlId=\"formBasicCheckbox\">\r\n                            </Form.Group>\r\n                            <Button onClick={this.createPage} className=\"link\" variant=\"link\">Create account</Button>\r\n                            <Button onClick={this.handleRegister} className=\"but1\" variant=\"primary\" type=\"submit\">\r\n                                Next\r\n                            </Button>\r\n                            <Snackbar\r\n                                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                                open={this.state.snackbaropen}\r\n                                autoHideDuration={3000}\r\n                                onClose={this.snackbarClose}\r\n                                message={<span id=\"message-id\">registered successfully</span>}\r\n                            // action\r\n                            />\r\n                        </Form></div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n export default Login","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\forgotpassword\\forgotpassword.jsx",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\register\\register.jsx",["82","83","84","85","86"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport './register.scss';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UserService from \"../../services/userservice\";\r\nconst userService = new UserService()\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            email: '',\r\n            snackbaropen: false,\r\n            snackbarmsg: ''\r\n        };\r\n    }\r\n    snackbarClose =(event) =>{\r\n        this.setState({snackbaropen:false});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // e.preventDefault();\r\n        console.log(\"on change calling\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            service: \"advance\"\r\n        }\r\n\r\n        userService.registration(data).then((response) => {\r\n            console.log(\"response successfull\", response);\r\n            this.setState({snackbaropen:true,snackbarmsg:'registered'})\r\n        }).catch((error) => {\r\n            console.log(\"error\", error);\r\n            this.setState({snackbaropen:true,snackbarmsg:error})\r\n        })\r\n    }\r\n    login = () => {\r\n        window.location.href = \"http://localhost:4200/login\"\r\n    }\r\n    myFunction = () => {\r\n        let x = document.getElementById(\"outlined-textarea3\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div className=\"container1-body\">\r\n                    \r\n\r\n                    <div className=\"box2\"><Typography className=\"app_name1\" variant=\"h5\" color=\"textSecondary\">\r\n                        <span style={{ color: \"#0606f8\" }}>F</span>\r\n                        <span style={{ color: \"#d10303\" }}>u</span>\r\n                        <span style={{ color: \"#f0b000\" }}>n</span>\r\n                        <span style={{ color: \"#0606f8\" }}>d</span>\r\n                        <span style={{ color: \"green\" }}>o</span>\r\n                        <span style={{ color: \"#d10303\" }}>o</span>\r\n                    </Typography></div>\r\n                    <div className='text'><h4>Create your Fundoo Account</h4></div>\r\n                    <Form className=\"pwd\">\r\n                        <Row>\r\n                            <Col className=\"fname\">\r\n                                <TextField\r\n                                    value={this.state.firstName}\r\n                                    name=\"firstName\"\r\n                                    id=\"outlined-textarea1\"\r\n                                    label=\"FirstName\"\r\n                                    placeholder=\"\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    margin=\"dense\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control placeholder=\"First name\" /> */}\r\n                            </Col>\r\n\r\n                            <Col className='lname'>\r\n                                <TextField\r\n                                    value={this.state.lastName}\r\n                                    name=\"lastName\"\r\n                                    id=\"outlined-textarea1\"\r\n                                    label=\"LastName\"\r\n                                    placeholder=\"\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    // type=\"text\"\r\n                                    size=\"small\"\r\n                                    margin=\"dense\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/* <Form.Control placeholder=\"Last name\" /> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"user\"><TextField\r\n                            value={this.state.email}\r\n                            name=\"email\"\r\n                            id=\"outlined-textarea2\"\r\n                            label=\"Username\"\r\n                            placeholder=\"\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            // color=\"blue\"\r\n                            helperText=\"You can use letters,numbers & symbols\"\r\n                            // size=\"medium\"\r\n                            margin=\"dense\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                            <span class=\"gmail\">@gmail.com</span>\r\n                        </div>\r\n                        <div className=\"line1\"><Button variant=\"link\">Use my current email address instead</Button></div>\r\n                        <div className=\"cnfmpass\">\r\n                            <Row>\r\n                                <Col className=\"pass1\">\r\n                                    <TextField\r\n                                        value={this.state.password}\r\n                                        name=\"password\"\r\n                                        id=\"outlined-textarea3\"\r\n                                        label=\"Password\"\r\n                                        placeholder=\"\"\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        size=\"small\"\r\n                                        margin=\"dense\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    {/* <Form.Control placeholder=\"First name\" /> */}\r\n                                </Col>\r\n\r\n                                <Col className='cnfm1'>\r\n                                    <TextField\r\n                                        id=\"outlined-textarea3\"\r\n                                        label=\"Confirm\"\r\n                                        placeholder=\"\"\r\n                                        name=\"\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        size=\"small\"\r\n                                        margin=\"dense\"\r\n                                    />\r\n                                    {/* <Form.Control placeholder=\"Last name\" /> */}\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"hint\">Use 8 or more characters with a mix of letters, numbers & symbols </div>\r\n                        </div>\r\n                        <Form.Group id=\"formGridCheckbox\">\r\n                            <Form.Check onClick={this.myFunction} type=\"checkbox\" label=\"Show password\" />\r\n                        </Form.Group>\r\n                        <Button onClick={this.login} className=\"link2\" variant=\"link\">Sign in instead</Button>\r\n                        <Button onClick={this.handleRegister} className=\"but2\" variant=\"primary\" type=\"submit\">\r\n                            Next\r\n  </Button>\r\n  <Snackbar\r\n                    anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                    open = {this.state.snackbaropen}\r\n                    autoHideDuration = {3000}\r\n                    onClose={this.snackbarClose}\r\n                    message = {<span id =\"message-id\">registered successfully</span>}\r\n                    // action\r\n                    />\r\n                        <div className=\"accnt\"><img /></div>\r\n                        {/* <div>One account. All of Google working for you.</div> */}\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Register","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\userservice.js",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\axiosservice.js",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\reset\\reset.jsx",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\dashboard\\dashboard.jsx",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\createNote\\createNote.jsx",["104","105","106","107","108","109","110","111"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\services\\notesservice.js",["112"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayicons\\displayicons.jsx",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\displayNotes\\displayNotes.jsx",["128"],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\getNote\\getNote1.jsx",[],"C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\trash\\gettrash.jsx",["129","130"],"import React, { Component } from 'react'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport CreateNote from '../createNote/createNote'\r\nimport DisplayNote from '../displayNotes/displayNotes'\r\nimport './gettrash.scss'\r\nconst noteService = new NoteService()\r\n\r\nclass getNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            trash: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.note()\r\n    }\r\n\r\n    note = () => {\r\n        console.log('called');\r\n        noteService.gettrashNote().then((res) => {\r\n            console.log(res.data.data.data);\r\n            this.setState({ trash: res.data.data.data })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mainContent\">\r\n                {\r\n                    this.state.trash.map((data) => (\r\n                        <Card key={data.id} className='card' variant='outlined' >\r\n                            <CardContent onClick={(e) => this.modalOpen(e, data)}>\r\n\r\n                                <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                    {data.description}\r\n                                </Typography>\r\n\r\n                                {/* <GetNote /> */}\r\n\r\n\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className='icons'>\r\n                                    <DisplayIcons\r\n                                        noteobject={data}\r\n                                    />\r\n                                </div>\r\n\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default getNote","C:\\Users\\Karat\\Desktop\\fundoo\\fundoo-notes\\src\\components\\archive\\getarchive.jsx",["131","132"],"import React, { Component } from 'react'\r\nimport NoteService from \"../../services/notesservice\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DisplayIcons from \"../displayicons/displayicons\"\r\nimport CreateNote from '../createNote/createNote'\r\nimport DisplayNote from '../displayNotes/displayNotes'\r\nimport './getarchive.scss'\r\nconst noteService = new NoteService()\r\n\r\nclass getNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            archive: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.note()\r\n    }\r\n\r\n    note = () => {\r\n        console.log('called');\r\n        noteService.getarchiveNote().then((res) => {\r\n            console.log(res.data.data.data);\r\n            this.setState({ archive: res.data.data.data })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mainContent\">\r\n                {\r\n                    this.state.archive.map((data) => (\r\n                        <Card key={data.id} className='card' variant='outlined' >\r\n                            <CardContent onClick={(e) => this.modalOpen(e, data)}>\r\n\r\n                                <Typography variant=\"h5\" key={data.index} component=\"h2\" >\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" key={data.index} component=\"p\" >\r\n                                    {data.description}\r\n                                </Typography>\r\n\r\n                                {/* <GetNote /> */}\r\n\r\n\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className='icons'>\r\n                                    <DisplayIcons\r\n                                        noteobject={data}\r\n                                    />\r\n                                </div>\r\n\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default getNote",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":4,"column":40,"nodeType":"139","messageId":"140","endLine":4,"endColumn":46},{"ruleId":"137","severity":1,"message":"142","line":4,"column":47,"nodeType":"139","messageId":"140","endLine":4,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":102,"column":37,"nodeType":"145","endLine":102,"endColumn":52},{"ruleId":"137","severity":1,"message":"146","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":18},{"ruleId":"137","severity":1,"message":"147","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":23,"column":13,"nodeType":"150","messageId":"151","endLine":23,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":145,"column":41,"nodeType":"145","endLine":145,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":188,"column":48,"nodeType":"154","endLine":188,"endColumn":55},{"ruleId":"137","severity":1,"message":"155","line":4,"column":13,"nodeType":"139","messageId":"140","endLine":4,"endColumn":21},{"ruleId":"137","severity":1,"message":"156","line":5,"column":13,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},{"ruleId":"137","severity":1,"message":"157","line":6,"column":13,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"137","severity":1,"message":"158","line":7,"column":13,"nodeType":"139","messageId":"140","endLine":7,"endColumn":20},{"ruleId":"137","severity":1,"message":"159","line":8,"column":13,"nodeType":"139","messageId":"140","endLine":8,"endColumn":20},{"ruleId":"137","severity":1,"message":"160","line":9,"column":13,"nodeType":"139","messageId":"140","endLine":9,"endColumn":20},{"ruleId":"137","severity":1,"message":"161","line":10,"column":13,"nodeType":"139","messageId":"140","endLine":10,"endColumn":20},{"ruleId":"137","severity":1,"message":"142","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":63,"column":21,"nodeType":"154","endLine":63,"endColumn":77},{"ruleId":"152","severity":1,"message":"153","line":69,"column":42,"nodeType":"154","endLine":69,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":103,"column":37,"nodeType":"154","endLine":103,"endColumn":67},{"ruleId":"152","severity":1,"message":"153","line":107,"column":59,"nodeType":"154","endLine":107,"endColumn":89},{"ruleId":"152","severity":1,"message":"153","line":111,"column":60,"nodeType":"154","endLine":111,"endColumn":90},{"ruleId":"152","severity":1,"message":"153","line":115,"column":55,"nodeType":"154","endLine":115,"endColumn":85},{"ruleId":"152","severity":1,"message":"153","line":119,"column":82,"nodeType":"154","endLine":119,"endColumn":112},{"ruleId":"152","severity":1,"message":"153","line":123,"column":77,"nodeType":"154","endLine":123,"endColumn":107},{"ruleId":"152","severity":1,"message":"153","line":128,"column":64,"nodeType":"154","endLine":128,"endColumn":88},{"ruleId":"137","severity":1,"message":"162","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"163","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":37},{"ruleId":"137","severity":1,"message":"164","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":29,"column":19,"nodeType":"167","messageId":"151","endLine":29,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":32,"column":26,"nodeType":"167","messageId":"151","endLine":32,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":56,"column":19,"nodeType":"167","messageId":"151","endLine":56,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":59,"column":26,"nodeType":"167","messageId":"151","endLine":59,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":75,"column":17,"nodeType":"154","endLine":75,"endColumn":73},{"ruleId":"137","severity":1,"message":"168","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"169","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":14},{"ruleId":"137","severity":1,"message":"170","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":25},{"ruleId":"137","severity":1,"message":"171","line":40,"column":16,"nodeType":"139","messageId":"140","endLine":40,"endColumn":23},{"ruleId":"137","severity":1,"message":"172","line":41,"column":10,"nodeType":"139","messageId":"140","endLine":41,"endColumn":15},{"ruleId":"137","severity":1,"message":"173","line":42,"column":10,"nodeType":"139","messageId":"140","endLine":42,"endColumn":23},{"ruleId":"137","severity":1,"message":"174","line":42,"column":25,"nodeType":"139","messageId":"140","endLine":42,"endColumn":41},{"ruleId":"137","severity":1,"message":"175","line":43,"column":10,"nodeType":"139","messageId":"140","endLine":43,"endColumn":16},{"ruleId":"137","severity":1,"message":"176","line":43,"column":18,"nodeType":"139","messageId":"140","endLine":43,"endColumn":27},{"ruleId":"137","severity":1,"message":"177","line":44,"column":10,"nodeType":"139","messageId":"140","endLine":44,"endColumn":15},{"ruleId":"137","severity":1,"message":"178","line":44,"column":17,"nodeType":"139","messageId":"140","endLine":44,"endColumn":25},{"ruleId":"137","severity":1,"message":"179","line":45,"column":10,"nodeType":"139","messageId":"140","endLine":45,"endColumn":21},{"ruleId":"137","severity":1,"message":"180","line":45,"column":23,"nodeType":"139","messageId":"140","endLine":45,"endColumn":37},{"ruleId":"137","severity":1,"message":"181","line":132,"column":9,"nodeType":"139","messageId":"140","endLine":132,"endColumn":20},{"ruleId":"137","severity":1,"message":"182","line":135,"column":9,"nodeType":"139","messageId":"140","endLine":135,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":205,"column":13,"nodeType":"145","endLine":205,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":132,"column":37,"nodeType":"154","endLine":132,"endColumn":93},{"ruleId":"137","severity":1,"message":"183","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":18},{"ruleId":"137","severity":1,"message":"184","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":19},{"ruleId":"137","severity":1,"message":"183","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":18},{"ruleId":"137","severity":1,"message":"184","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":19},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'VscIcons' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","'FaIcons' is defined but never used.","'FiIcons' is defined but never used.","'CgIcons' is defined but never used.","'BsIcons' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'axios' is defined but never used.","'Card' is defined but never used.","'PowerInputSharp' is defined but never used.","'setOpen' is assigned a value but never used.","'color' is assigned a value but never used.","'showColorList' is assigned a value but never used.","'setShowColorList' is assigned a value but never used.","'noteId' is assigned a value but never used.","'setNoteId' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'handlecolor' is assigned a value but never used.","'handlecolorOut' is assigned a value but never used.","'CreateNote' is defined but never used.","'DisplayNote' is defined but never used.","no-global-assign","no-unsafe-negation"]